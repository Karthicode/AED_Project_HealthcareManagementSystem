/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.DispatcherService;


import Model.DispatcherServiceProvider.DispatcherService;
import HealthCareManager.PartnerInfirmaries.PartnerInfirmiries;
import HealthCareManager.PartnerInfirmaries.PartnerInfirmiriesDirectory;
import HealthCareManager.SupplyStore.EquipmentSupplyStore;
import HealthCareManager.SupplyStore.supplyEquipmentDispatchModel;
import InventorySupply.FirstAidSupply.FirstAidKit;
import InventorySupply.FirstAidSupply.FirstAidKitDirectory;
import IntegrationSystem.HealthcareSystemOrganizationIntegration;
import IntegrationSystem.ConsumerRecords;
import IntegrationSystem.EnterpriseUserDirectory;
import InventorySupply.InventorySupply;
import InventorySupply.InventorySupplyModelDirectory;
import InventorySupply.Dipatches.DispatchRequest;
import InventorySupply.Dipatches.DispatchDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karthik 
 */
public class DispatcherServiceDatabase extends javax.swing.JPanel {

    /**
     * Creates new form DispatcherServiceDatabase
     */
    JPanel userProcessContainer;
    HealthcareSystemOrganizationIntegration healthcareSystemOrganizationIntegration;
    ConsumerRecords consumerRecords;
    EnterpriseUserDirectory enterpriseUserDirectory;
    FirstAidKitDirectory firstAidKitDirectory;
    DispatcherService dispatcherService;
    
    public DispatcherServiceDatabase(JPanel userProcessContainer , HealthcareSystemOrganizationIntegration healthcareSystemOrganizationIntegration, DispatcherService dispatcherService) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.healthcareSystemOrganizationIntegration = healthcareSystemOrganizationIntegration;
        this.dispatcherService = dispatcherService;
        
        insertUserInputDataToJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitleAllOrders = new javax.swing.JLabel();
        jButtonExit = new javax.swing.JButton();
        jButtonAccept = new javax.swing.JButton();
        jLabelTitleHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHospitalAllOrders = new javax.swing.JTable();
        jButtonMarlDelivered = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableHospitalNewOrders = new javax.swing.JTable();
        jLabelTitleNewOrder = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 70, 169));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitleAllOrders.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelTitleAllOrders.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitleAllOrders.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitleAllOrders.setText("All Medical Orders");
        add(jLabelTitleAllOrders, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 706, -1));

        jButtonExit.setBackground(new java.awt.Color(0, 70, 169));
        jButtonExit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonExit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });
        add(jButtonExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, -1, -1));

        jButtonAccept.setText("ACCEPT");
        jButtonAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptActionPerformed(evt);
            }
        });
        add(jButtonAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 560, -1, -1));

        jLabelTitleHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelTitleHeader.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitleHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitleHeader.setText("Delivery Agency Order Database");
        add(jLabelTitleHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 940, -1));

        jTableHospitalAllOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Medical Equipment Names", "Medical Equipment Total Price", "Hospital ID", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableHospitalAllOrders);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 680, 110));

        jButtonMarlDelivered.setText("MARK DELIVERED");
        jButtonMarlDelivered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMarlDeliveredActionPerformed(evt);
            }
        });
        add(jButtonMarlDelivered, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 560, -1, -1));

        jTableHospitalNewOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Medical Equipment Names", "Medical Equipment Total Price", "Hospital ID", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableHospitalNewOrders);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 430, 680, 110));

        jLabelTitleNewOrder.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelTitleNewOrder.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitleNewOrder.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitleNewOrder.setText("All New Orders");
        add(jLabelTitleNewOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, 706, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
            crdLyt.show(userProcessContainer,"Sysadmin");
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTableHospitalNewOrders.getModel();
        int selected_row_ix = jTableHospitalNewOrders.getSelectedRow();
        DispatchRequest dispatchRequest = (DispatchRequest) model.getValueAt(selected_row_ix, 0);
        model.setValueAt("accepted", selected_row_ix, 4);
        dispatchRequest.setRequest_processing_status("accpeted");
        jTableHospitalNewOrders.setModel(model);
    }//GEN-LAST:event_jButtonAcceptActionPerformed

    private void jButtonMarlDeliveredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMarlDeliveredActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTableHospitalNewOrders.getModel();
        int selected_row_ix = jTableHospitalNewOrders.getSelectedRow();
        DispatchRequest dispatchRequest = (DispatchRequest) model.getValueAt(selected_row_ix, 0);
        model.setValueAt("delivered", selected_row_ix, 4);
        dispatchRequest.setRequest_processing_status("delivered");
        insertUserInputDataToJTable();
        DefaultTableModel modelAllOrders = (DefaultTableModel) jTableHospitalAllOrders.getModel();
        modelAllOrders.addRow(new Object[]{dispatchRequest, dispatchRequest.getFirstAidKitsTotalQuantity(), dispatchRequest.getRequested_supply_Amount(),dispatchRequest.getInventory_Id(),dispatchRequest.getRequest_processing_status()});
        
        PartnerInfirmiriesDirectory partnerInfirmiriesDirectory = healthcareSystemOrganizationIntegration.getInfirmaryDirectory();
        ArrayList<PartnerInfirmiries> infirmiriesList = partnerInfirmiriesDirectory.getHospitalList();
        
        for(PartnerInfirmiries infirmiries: infirmiriesList){
            if(dispatchRequest.getInstitution_Id().equals(infirmiries.getInfirmaryId())){
                supplyEquipmentDispatchModel medSupEquipInternalDirectory = infirmiries.getMedSupEquipInternalDirectory();
                ArrayList<EquipmentSupplyStore> equipmentSupplyStores = medSupEquipInternalDirectory.getSupplyItemsFirstAidList();                
                for(EquipmentSupplyStore medSupEquipInternal: equipmentSupplyStores){
                    for (HashMap.Entry<FirstAidKit,String> entry : dispatchRequest.getFirstAidKitsTotalQuantity().entrySet()){
                        if(entry.getKey().toString().equals(medSupEquipInternal.getSupply_Item_name())){
                            String quantity_total = medSupEquipInternal.getSupply_quantity();
                            String new_qty_str = String.valueOf(Integer.parseInt(entry.getValue()) + Integer.parseInt(quantity_total));
                            medSupEquipInternal.setSupply_quantity(new_qty_str);
                        }
                    }
                }
                medSupEquipInternalDirectory.setSupplyItemsFirstAidList(equipmentSupplyStores);
                infirmiries.setMedSupEquipInternalDirectory(medSupEquipInternalDirectory);
            }
            
        }
        
        
        
    }//GEN-LAST:event_jButtonMarlDeliveredActionPerformed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAccept;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonMarlDelivered;
    private javax.swing.JLabel jLabelTitleAllOrders;
    private javax.swing.JLabel jLabelTitleHeader;
    private javax.swing.JLabel jLabelTitleNewOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableHospitalAllOrders;
    private javax.swing.JTable jTableHospitalNewOrders;
    // End of variables declaration//GEN-END:variables

  

    private void insertUserInputDataToJTable() {
        InventorySupplyModelDirectory inventorySupplyModelDirectory = healthcareSystemOrganizationIntegration.getInventoryDirectory();
        ArrayList<InventorySupply> medSupWarehouseList = inventorySupplyModelDirectory.getInventories_Supply_List();
        
        DefaultTableModel model = (DefaultTableModel) jTableHospitalNewOrders.getModel();
        model.setRowCount(0);

        
        for(InventorySupply inventorySupply: medSupWarehouseList)
        {
            DispatchDirectory orderDirectory = inventorySupply.getOrderDirectory();
            if(orderDirectory!=null){
            ArrayList<DispatchRequest> dispatchRequests = orderDirectory.getDispatch_List();
            
                for(DispatchRequest order: dispatchRequests)
            if(order.getRequest_processing_status().equals("new") && order.getTransporter_Id().equals(dispatcherService.getDeliveryAgencyId())){
                model.addRow(new Object[]{order, order.getFirstAidKitsTotalQuantity(), order.getRequested_supply_Amount(),order.getInventory_Id(),order.getRequest_processing_status()});
            }
            }
            
        }
        jTableHospitalNewOrders.setModel(model);
    }
}
