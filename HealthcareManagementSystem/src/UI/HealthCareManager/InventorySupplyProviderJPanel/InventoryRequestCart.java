/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.HealthCareManager.InventorySupplyProviderJPanel;

import HealthCareManager.PartnerInfirmaries.PartnerInfirmiries;
import HealthCareManager.Consultation.Consultation;
import HealthCareManager.Consultation.ConsultationTestResults;
import HealthCareManager.SupplyStore.MedSupEquipInternalDirectory;
import IntegrationSystem.HealthcareSystemOrganizationIntegration;
import IntegrationSystem.ConsumerRecords;
import IntegrationSystem.EnterpriseUserDirectory;
import InventorySupply.FirstAidSupply.FirstAidKit;
import InventorySupply.FirstAidSupply.FirstAidKitDirectory;
import InventorySupply.InventorySupply;
import InventorySupply.InventorySupplyModelDirectory;
import InventorySupply.Dipatches.DispatchRequest;
import InventorySupply.Dipatches.DispatcherDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rishi
 */
public class InventoryRequestCart extends javax.swing.JPanel {

    /**
     * Creates new form OperationalAccountsPage
     */
    JPanel userProcessContainer;
    HealthcareSystemOrganizationIntegration healthcareSystemOrganizationIntegration;
    ConsumerRecords consumers;
    EnterpriseUserDirectory enterpriseUsersDir;
    Consultation consultations;
    PartnerInfirmiries partnerInfirmiries;
    DispatchRequest new_order = new DispatchRequest();

    public InventoryRequestCart(JPanel userProcessContainer, HealthcareSystemOrganizationIntegration healthcareSystemOrganizationIntegration, PartnerInfirmiries partnerInfirmiries) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.healthcareSystemOrganizationIntegration = healthcareSystemOrganizationIntegration;
        this.partnerInfirmiries = partnerInfirmiries;
        if (partnerInfirmiries.getMedSupEquipInternalDirectory() == null) {
            partnerInfirmiries.setMedSupEquipInternalDirectory(new MedSupEquipInternalDirectory());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelHeader = new javax.swing.JLabel();
        jButtonExit = new javax.swing.JButton();
        jButtonTestSearch = new javax.swing.JButton();
        jLabelEquipmentname = new javax.swing.JLabel();
        jTextFieldMedicalEquipmentName = new javax.swing.JTextField();
        jLabelMainHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEquipmentDetails = new javax.swing.JTable();
        jButtonPlaceOrderEquiment = new javax.swing.JButton();
        jButtonTableRefresh = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEquipmentSearchResults = new javax.swing.JTable();
        jButtonEquipmentddToCart = new javax.swing.JButton();
        jLabelEquipmentQuantity = new javax.swing.JLabel();
        jTextFieldMedicalEquipmentOrderQuantity = new javax.swing.JTextField();
        jButtonEquipmentClearCart = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 70, 169));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelHeader.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelHeader.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHeader.setText("Equipment Search");
        add(jLabelHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 706, -1));

        jButtonExit.setBackground(new java.awt.Color(0, 70, 169));
        jButtonExit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonExit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });
        add(jButtonExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        jButtonTestSearch.setText("SEARCH");
        jButtonTestSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTestSearchActionPerformed(evt);
            }
        });
        add(jButtonTestSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 350, -1, -1));

        jLabelEquipmentname.setForeground(new java.awt.Color(255, 255, 255));
        jLabelEquipmentname.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelEquipmentname.setText("Medical Equipment Name");
        add(jLabelEquipmentname, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, 150, 20));

        jTextFieldMedicalEquipmentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMedicalEquipmentNameActionPerformed(evt);
            }
        });
        add(jTextFieldMedicalEquipmentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 350, 270, -1));

        jLabelMainHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelMainHeader.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMainHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMainHeader.setText("ER WARD DATABASE");
        add(jLabelMainHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 706, -1));

        jTableEquipmentDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medical Equipment Name", "Medical Equipment Price", "Medical Equipment Quantity", "Warehouse ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEquipmentDetails);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 560, 820, 110));

        jButtonPlaceOrderEquiment.setText("PLACE ORDER");
        jButtonPlaceOrderEquiment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlaceOrderEquimentActionPerformed(evt);
            }
        });
        add(jButtonPlaceOrderEquiment, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 700, -1, -1));

        jButtonTableRefresh.setText("REFRESH");
        jButtonTableRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTableRefreshActionPerformed(evt);
            }
        });
        add(jButtonTableRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 250, -1, -1));

        jTableEquipmentSearchResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Medical Equipment Name", "Medical Equipment Price", "Medical Equipment Quantity", "Warehouse ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEquipmentSearchResults.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableEquipmentSearchResultsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableEquipmentSearchResults);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 820, 110));

        jButtonEquipmentddToCart.setText("ADD TO CART");
        jButtonEquipmentddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEquipmentddToCartActionPerformed(evt);
            }
        });
        add(jButtonEquipmentddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 510, -1, -1));

        jLabelEquipmentQuantity.setForeground(new java.awt.Color(255, 255, 255));
        jLabelEquipmentQuantity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelEquipmentQuantity.setText("Medical Equipment Quantity");
        add(jLabelEquipmentQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 510, 150, -1));

        jTextFieldMedicalEquipmentOrderQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMedicalEquipmentOrderQuantityActionPerformed(evt);
            }
        });
        add(jTextFieldMedicalEquipmentOrderQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 510, 270, -1));

        jButtonEquipmentClearCart.setText("CLEAR CART");
        jButtonEquipmentClearCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEquipmentClearCartActionPerformed(evt);
            }
        });
        add(jButtonEquipmentClearCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 700, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.show(userProcessContainer, "inventoryRequestCart");
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jTextFieldMedicalEquipmentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMedicalEquipmentNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMedicalEquipmentNameActionPerformed

    private void jButtonTestSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTestSearchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTableEquipmentSearchResults.getModel();
        model.setRowCount(0);
        InventorySupplyModelDirectory inventorySupplyModelDirectory = healthcareSystemOrganizationIntegration.getInventoryDirectory();
        ArrayList<InventorySupply> inventoriesList = inventorySupplyModelDirectory.getInventories_Supply_List();
        String medSupEquip_name = jTextFieldMedicalEquipmentName.getText();

        for (InventorySupply inventorySupply : inventoriesList) {
            FirstAidKitDirectory firstAidKitDirectory = inventorySupply.getInventory_Stock_Directory();
            ArrayList<FirstAidKit> firstAidKits = firstAidKitDirectory.getFirstAidKits();
            for (FirstAidKit medSupEquip : firstAidKits) {
                if (medSupEquip.getFirst_Aid_Name().contains(medSupEquip_name)) {
                    model.addRow(new Object[]{medSupEquip, medSupEquip.getFirst_Aid_Cost(), medSupEquip.getFirst_Aid_Number(), medSupEquip.getFirst_Aid_Type_Id()});
                }
            }
        }

        remove_empty_input_Values();
    }//GEN-LAST:event_jButtonTestSearchActionPerformed

    private void jButtonPlaceOrderEquimentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlaceOrderEquimentActionPerformed
        // TODO add your handling code here:
        InventorySupplyModelDirectory inventorySupplyModelDirectory = healthcareSystemOrganizationIntegration.getInventoryDirectory();
        ArrayList<InventorySupply> inventorySupplys = inventorySupplyModelDirectory.getInventories_Supply_List();

        String inventory_Set_ID = new_order.getInventory_Id();

        for (InventorySupply inventorySupply : inventorySupplys) {

            if (inventorySupply.getInventorySupply_Id().equals(inventory_Set_ID)) {
                DispatcherDirectory dispatcherDirectory = inventorySupply.getOrderDirectory();
                String last_order_id = dispatcherDirectory.getLast_order_id();
                int previous_Request = Integer.parseInt(last_order_id.replaceAll("[\\D]", ""));
                previous_Request++;
                new_order.setOrder_id(String.valueOf(previous_Request));
                new_order.setInstitution_Id(partnerInfirmiries.getInfirmaryId());
                new_order.total_request_Amount();
                dispatcherDirectory.addDispatch(new_order);
                dispatcherDirectory.setLast_order_id(last_order_id);
                inventorySupply.setOrderDirectory(dispatcherDirectory);
                JOptionPane.showMessageDialog(this, "Order Placed");
            }
        }

    }//GEN-LAST:event_jButtonPlaceOrderEquimentActionPerformed

    private void jButtonTableRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTableRefreshActionPerformed
        // TODO add your handling code here:
        remove_empty_input_Values();
        DefaultTableModel model = (DefaultTableModel) jTableEquipmentSearchResults.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_jButtonTableRefreshActionPerformed

    private void jButtonEquipmentddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEquipmentddToCartActionPerformed
        // TODO add your handling code here:
        int get_Row_Data = jTableEquipmentSearchResults.getSelectedRow();
        DefaultTableModel modelSearch = (DefaultTableModel) jTableEquipmentSearchResults.getModel();
        FirstAidKit firstAidKit = (FirstAidKit) modelSearch.getValueAt(get_Row_Data, 0);
        String user_quantity = jTextFieldMedicalEquipmentOrderQuantity.getText();
        String final_price = "";
        if (!user_quantity.isEmpty()) {
            DefaultTableModel modelCart = (DefaultTableModel) jTableEquipmentDetails.getModel();
            if (new_order.getFirstAidKitsTotalQuantity().isEmpty()) {
                new_order.addItemToOrder(firstAidKit, user_quantity);
                new_order.setRequest_processing_status("OPEN");
                final_price = String.valueOf(Integer.parseInt(firstAidKit.getFirst_Aid_Cost()) * Integer.parseInt(user_quantity));
                new_order.setInventory_Id(firstAidKit.getFirst_Aid_Type_Id());
                modelCart.addRow(new Object[]{firstAidKit, final_price, user_quantity, firstAidKit.getFirst_Aid_Type_Id()});
            } else {
                if (!firstAidKit.getFirst_Aid_Type_Id().equals(new_order.getInventory_Id())) {
                    JOptionPane.showMessageDialog(this, "Dispatch items from Inventory or clear orders");
                } else {
                    new_order.addItemToOrder(firstAidKit, user_quantity);
                    final_price = String.valueOf(Integer.parseInt(firstAidKit.getFirst_Aid_Cost()) * Integer.parseInt(user_quantity));
                    modelCart.addRow(new Object[]{firstAidKit, final_price, user_quantity, firstAidKit.getFirst_Aid_Type_Id()});
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Enter required quanity for this dispatch");
        }


    }//GEN-LAST:event_jButtonEquipmentddToCartActionPerformed

    private void jTextFieldMedicalEquipmentOrderQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMedicalEquipmentOrderQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMedicalEquipmentOrderQuantityActionPerformed

    private void jTableEquipmentSearchResultsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEquipmentSearchResultsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableEquipmentSearchResultsMouseClicked

    private void jButtonEquipmentClearCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEquipmentClearCartActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelCart = (DefaultTableModel) jTableEquipmentDetails.getModel();
        modelCart.setRowCount(0);
        new_order = new DispatchRequest();

    }//GEN-LAST:event_jButtonEquipmentClearCartActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEquipmentClearCart;
    private javax.swing.JButton jButtonEquipmentddToCart;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonPlaceOrderEquiment;
    private javax.swing.JButton jButtonTableRefresh;
    private javax.swing.JButton jButtonTestSearch;
    private javax.swing.JLabel jLabelEquipmentQuantity;
    private javax.swing.JLabel jLabelEquipmentname;
    private javax.swing.JLabel jLabelHeader;
    private javax.swing.JLabel jLabelMainHeader;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableEquipmentDetails;
    private javax.swing.JTable jTableEquipmentSearchResults;
    private javax.swing.JTextField jTextFieldMedicalEquipmentName;
    private javax.swing.JTextField jTextFieldMedicalEquipmentOrderQuantity;
    // End of variables declaration//GEN-END:variables

    private void remove_empty_input_Values() {
        jTextFieldMedicalEquipmentName.setText("");
        jTextFieldMedicalEquipmentOrderQuantity.setText("");
    }
}
