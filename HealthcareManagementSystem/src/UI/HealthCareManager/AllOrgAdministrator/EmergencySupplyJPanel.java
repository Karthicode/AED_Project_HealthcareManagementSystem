/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.HealthCareManager.AllOrgAdministrator;



import HealthCareManager.PartnerInfirmaries.PartnerInfirmiries;
import HealthCareManager.Patient.ER_Ward_Incoming;
import HealthCareManager.Patient.ERWardDirectory;
import HealthCareManager.SupplyStore.EquipmentSupplyStore;
import HealthCareManager.SupplyStore.MedSupEquipInternalDirectory;
import HealthCareManager.Patient.ER_DispatchOrders;
import HealthCareManager.Tickets.Tickets;
import HealthCareManager.Tickets.TicketModelDirectory;
import IntegrationSystem.HealthcareSystemOrganizationIntegration;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karthik 
 */
public class EmergencySupplyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form OperationalAccountsPage
     */
    JPanel userProcessContainer;
    HealthcareSystemOrganizationIntegration medicalServiceCentralisationEcoSystem;
    PartnerInfirmiries infirmaries;
    String status_of_report;
    ER_Ward_Incoming patient;
    String report_path;
    public EmergencySupplyJPanel(JPanel userProcessContainer , HealthcareSystemOrganizationIntegration medicalServiceCentralisationEcoSystem, PartnerInfirmiries infirmiries) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.medicalServiceCentralisationEcoSystem = medicalServiceCentralisationEcoSystem;
        this.infirmaries = infirmiries;
        if(infirmiries.getPatientDirectory()== null)
           infirmiries.setPatientDirectory(new ERWardDirectory());
        populateNewRequestsTable();
        populateEquipmentComboBox();
        populateAllOrdersTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jLabelTitle1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RequestTable = new javax.swing.JTable();
        CreateButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        ViewButton = new javax.swing.JButton();
        jLabelEquipmentQuantity = new javax.swing.JLabel();
        DeleteButton = new javax.swing.JButton();
        jLabelID = new javax.swing.JLabel();
        jTextFieldPatientId = new javax.swing.JTextField();
        jLabelName = new javax.swing.JLabel();
        jTextFieldOrderDate = new javax.swing.JTextField();
        OrderToggle = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        OrdersTable = new javax.swing.JTable();
        jLabelTitle3 = new javax.swing.JLabel();
        jTextFieldPatientName = new javax.swing.JTextField();
        jLabelOrderDate = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jTextFieldPatientEmail = new javax.swing.JTextField();
        jLabelOrder = new javax.swing.JLabel();
        jTextFieldQuantity = new javax.swing.JTextField();
        jLabelOrderID = new javax.swing.JLabel();
        jTextFieldOrderID = new javax.swing.JTextField();
        jLabelRequestMode = new javax.swing.JLabel();
        jTextFieldMode = new javax.swing.JTextField();

        setBackground(new java.awt.Color(51, 51, 0));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitle.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(255, 153, 153));
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("Medical Supplies");
        add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 706, -1));

        jLabelTitle1.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabelTitle1.setForeground(new java.awt.Color(255, 153, 153));
        jLabelTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle1.setText("All orders");
        add(jLabelTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, 706, -1));

        RequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Phone", "Email", "Order Date", "Case ID", "Case Description", "Request Mode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        RequestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RequestTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(RequestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 490, 160));

        CreateButton.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        CreateButton.setText("CREATE");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });
        add(CreateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 770, -1, -1));

        UpdateButton.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        UpdateButton.setText("UPDATE");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });
        add(UpdateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 770, -1, -1));

        ViewButton.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        ViewButton.setText("VIEW");
        ViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewButtonActionPerformed(evt);
            }
        });
        add(ViewButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 770, -1, -1));

        jLabelEquipmentQuantity.setForeground(new java.awt.Color(255, 153, 153));
        jLabelEquipmentQuantity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelEquipmentQuantity.setText("Order Quantity");
        add(jLabelEquipmentQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 650, 150, 20));

        DeleteButton.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        DeleteButton.setText("DELETE");
        add(DeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 770, -1, -1));

        jLabelID.setForeground(new java.awt.Color(255, 153, 153));
        jLabelID.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelID.setText("Patient ID:");
        add(jLabelID, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 440, 104, -1));

        jTextFieldPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPatientIdActionPerformed(evt);
            }
        });
        add(jTextFieldPatientId, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 430, 270, -1));

        jLabelName.setForeground(new java.awt.Color(255, 153, 153));
        jLabelName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelName.setText("Name :");
        add(jLabelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, 100, -1));
        add(jTextFieldOrderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 580, 270, -1));

        OrderToggle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blood Test", "Cholestrol", "CBP", "Urine test", "X-Ray", "C.T Scan", "M.R.I ", "Dental Scan", "Ultrasound", "ECG", "EEG", " " }));
        OrderToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderToggleActionPerformed(evt);
            }
        });
        add(OrderToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 610, 140, -1));

        OrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Name", "Order ID", "Equipment Name", "Order Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrdersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrdersTableMouseClicked(evt);
            }
        });
        OrdersTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                OrdersTableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(OrdersTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 230, 490, 160));

        jLabelTitle3.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabelTitle3.setForeground(new java.awt.Color(255, 153, 153));
        jLabelTitle3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle3.setText("New instrument requests");
        add(jLabelTitle3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 490, -1));

        jTextFieldPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPatientNameActionPerformed(evt);
            }
        });
        add(jTextFieldPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 470, 270, -1));

        jLabelOrderDate.setForeground(new java.awt.Color(255, 153, 153));
        jLabelOrderDate.setText("Order Date:");
        add(jLabelOrderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 580, 104, -1));

        jLabelEmail.setForeground(new java.awt.Color(255, 153, 153));
        jLabelEmail.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelEmail.setText("Email :");
        add(jLabelEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 510, 100, -1));

        jTextFieldPatientEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPatientEmailActionPerformed(evt);
            }
        });
        add(jTextFieldPatientEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 510, 270, -1));

        jLabelOrder.setForeground(new java.awt.Color(255, 153, 153));
        jLabelOrder.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelOrder.setText("Order");
        add(jLabelOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 610, 80, 20));
        add(jTextFieldQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 650, 270, -1));

        jLabelOrderID.setForeground(new java.awt.Color(255, 153, 153));
        jLabelOrderID.setText("Order ID:");
        add(jLabelOrderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 550, 104, -1));
        add(jTextFieldOrderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 550, 270, -1));

        jLabelRequestMode.setForeground(new java.awt.Color(255, 153, 153));
        jLabelRequestMode.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelRequestMode.setText("Request Mode");
        add(jLabelRequestMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 690, 150, 20));
        add(jTextFieldMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 690, 270, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void ViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ViewButtonActionPerformed

    private void jTextFieldPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPatientIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPatientIdActionPerformed

    private void OrderToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderToggleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OrderToggleActionPerformed

    private void jTextFieldPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPatientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPatientNameActionPerformed

    private void RequestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RequestTableMouseClicked
        // TODO add your handling code here:
        
        int row_set_value = RequestTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) RequestTable.getModel();
        jTextFieldPatientId.setText(model.getValueAt(row_set_value, 1).toString());
        jTextFieldPatientName.setText(model.getValueAt(row_set_value, 0).toString());
        jTextFieldPatientEmail.setText(model.getValueAt(row_set_value, 2).toString());
        jTextFieldOrderDate.setText(model.getValueAt(row_set_value, 3).toString());
        jTextFieldMode.setText(model.getValueAt(row_set_value, 6).toString());
        status_of_report = "No";
        changeRequestStatus(model.getValueAt(row_set_value, 4).toString());
    }//GEN-LAST:event_RequestTableMouseClicked
    
    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) OrdersTable.getModel();
        model.setRowCount(0);
        ArrayList<String> user_input = check_empty_field();
        ERWardDirectory patientDirectory = infirmaries.getPatientDirectory();
        ArrayList<ER_Ward_Incoming> patientList = patientDirectory.getPatientList();
        ER_Ward_Incoming newPatient = new ER_Ward_Incoming();
        for(ER_Ward_Incoming patient: patientList){
            if(patient.getER_Ward_ID().equals(user_input.get(0))){
                newPatient = patient;
                break;
            }
        }


        newPatient.setER_Ward_ID(user_input.get(0));
        newPatient.setER_Ward_Name(user_input.get(1));
        newPatient.setER_Ward_Person_Email(user_input.get(5));
        ER_DispatchOrders patientOrder = new ER_DispatchOrders();
       
        patientOrder.setRequest_Id(user_input.get(2));
        patientOrder.setOrder_item(user_input.get(3));
        patientOrder.setRequest_Date(user_input.get(4));
        patientOrder.setItem_count(user_input.get(6));
        
        ArrayList<ER_DispatchOrders> ER_Incoming_Persons_List = newPatient.getPatientOrderList();

        ER_Incoming_Persons_List.add(patientOrder);
        newPatient.setPatientOrderList(ER_Incoming_Persons_List);
        patientList.add(newPatient);
        patientDirectory.setPatientList(patientList);
        infirmaries.setPatientDirectory(patientDirectory);
        
        
        model.addRow(new Object[]{newPatient,newPatient.getER_Ward_Name(),patientOrder.getRequest_Id(), patientOrder.getOrder_item(),patientOrder.getRequest_Date()});
        populateNewRequestsTable();
        populateAllOrdersTable();
  
        
        remove_empty_input_Values();
    }//GEN-LAST:event_CreateButtonActionPerformed

    private void OrdersTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OrdersTableKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_OrdersTableKeyPressed

    private void OrdersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrdersTableMouseClicked
        // TODO add your handling code here:
        CreateButton.setEnabled(false);
        int selected_row_ix = OrdersTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) OrdersTable.getModel();
        ER_Ward_Incoming select_patient_details = (ER_Ward_Incoming) model.getValueAt(selected_row_ix, 0);
        jTextFieldPatientId.setText(select_patient_details.getER_Ward_ID());
        jTextFieldPatientName.setText(select_patient_details.getER_Ward_Name());
        jTextFieldPatientEmail.setText(select_patient_details.getER_Ward_Person_Email());
        String order_id = model.getValueAt(selected_row_ix, 2).toString();
        ArrayList<ER_DispatchOrders> patientOrderList = select_patient_details.getPatientOrderList();
        for(ER_DispatchOrders patientOrder: patientOrderList){
            if(patientOrder.getRequest_Id().equals(order_id)){
                jTextFieldOrderDate.setText(patientOrder.getRequest_Date());
                jTextFieldOrderID.setText(patientOrder.getRequest_Id());
                OrderToggle.setSelectedItem(patientOrder.getOrder_item());
                jTextFieldQuantity.setText(patientOrder.getItem_count());
            }   
        }
    }//GEN-LAST:event_OrdersTableMouseClicked

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        
        int selected_row_ix = OrdersTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) OrdersTable.getModel();
        ER_Ward_Incoming incoming_Person_Details = (ER_Ward_Incoming) model.getValueAt(selected_row_ix, 0);
        ERWardDirectory attendenceDirectory = infirmaries.getPatientDirectory();

        attendenceDirectory.updatePatient(incoming_Person_Details.getER_Ward_ID());
        infirmaries.setPatientDirectory(attendenceDirectory);
        populateAllOrdersTable();
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void jTextFieldPatientEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPatientEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPatientEmailActionPerformed

        private void remove_empty_input_Values(){
            jTextFieldPatientId.setText("");
            jTextFieldPatientName.setText("");
            jTextFieldPatientEmail.setText("");
            jTextFieldOrderDate.setText("");  
            jTextFieldOrderID.setText("");
            jTextFieldQuantity.setText("");
            jTextFieldMode.setText("");
        }
       

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JComboBox<String> OrderToggle;
    private javax.swing.JTable OrdersTable;
    private javax.swing.JTable RequestTable;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JButton ViewButton;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelEquipmentQuantity;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelOrder;
    private javax.swing.JLabel jLabelOrderDate;
    private javax.swing.JLabel jLabelOrderID;
    private javax.swing.JLabel jLabelRequestMode;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelTitle1;
    private javax.swing.JLabel jLabelTitle3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldMode;
    private javax.swing.JTextField jTextFieldOrderDate;
    private javax.swing.JTextField jTextFieldOrderID;
    private javax.swing.JTextField jTextFieldPatientEmail;
    private javax.swing.JTextField jTextFieldPatientId;
    private javax.swing.JTextField jTextFieldPatientName;
    private javax.swing.JTextField jTextFieldQuantity;
    // End of variables declaration//GEN-END:variables
    private void changeRequestStatus(String request_id){
        TicketModelDirectory requestDirectory = medicalServiceCentralisationEcoSystem.getTicketDirectory();
        ArrayList<Tickets> requestList = requestDirectory.getTickets_List();
        for(Tickets request: requestList){
            if(request.getTicket_Status().equals("new") && request.getClient_postcode().equals(infirmaries.getInfirmary_postcode()) && request.getTicket_Id().equals(request_id)){
                request.setTicket_Status("Completed");
            }
        }
        requestDirectory.setTickets_List(requestList);
    }
    private void populateNewRequestsTable() {
        
        DefaultTableModel model = (DefaultTableModel) RequestTable.getModel();
        model.setRowCount(0);
        TicketModelDirectory requestDirectory = medicalServiceCentralisationEcoSystem.getTicketDirectory();
        ArrayList<Tickets> requestList = requestDirectory.getTickets_List();
        for(Tickets request: requestList){
            if(request.getTicket_Status().equals("new") && request.getClient_postcode().equals(infirmaries.getInfirmary_postcode()) && request.getTicket_Category().equals("MedicalEquipment")){
           
                model.addRow(new Object []{request.getTicket_Name(),request.getConsumer_phone(),request.getClient_EmailID(),request.getTicket_Time(),request.getTicket_Id(),request.getTicket_description(), request.getTicket_Type()});
            }
        }
        RequestTable.setModel(model);
    }

    private void populateEquipmentComboBox() {
        MedSupEquipInternalDirectory medSupEquipInternalDirectory = infirmaries.getMedSupEquipInternalDirectory();
        ArrayList<EquipmentSupplyStore> medSupEquipList = medSupEquipInternalDirectory.getMedSupEquipInternalList();
        OrderToggle.removeAllItems();
        for(EquipmentSupplyStore medSupEquipInternal: medSupEquipList){
            OrderToggle.addItem(medSupEquipInternal.getSupply_Item_name());
        }
    }

    private ArrayList<String> check_empty_field() {
        ArrayList<String> data_Value_entered = new ArrayList<>();
        String consumer_ER_ID = jTextFieldPatientId.getText();
        String consumer_ER_name = jTextFieldPatientName.getText();
        String user_equip_name = (String) OrderToggle.getSelectedItem();
        String dispatch_Date = jTextFieldOrderDate.getText();
        String dispatch_ID = jTextFieldOrderID.getText();
        String consumer_patient_email = jTextFieldPatientEmail.getText();
        String consumer_amt = jTextFieldQuantity.getText();
        String user_mode = jTextFieldMode.getText();
        if(consumer_ER_name.isEmpty()){
            JOptionPane.showMessageDialog(this, "ER can't be left empty.");
        }
        else if(consumer_ER_name.isEmpty()){
            JOptionPane.showMessageDialog(this, "ER Name can't be left empty.");
        }
        else if(user_equip_name.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please choose an supply.");
        }
  
        else if(dispatch_ID.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter an orderid.");
        }
        else if(dispatch_Date.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter a Consultation date.");
        }
        else if(consumer_amt.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter a quantity.");
        }
        
        
        data_Value_entered.add(consumer_ER_name);
        data_Value_entered.add(consumer_ER_name);
        data_Value_entered.add(dispatch_ID);
        data_Value_entered.add(user_equip_name);
        data_Value_entered.add(dispatch_Date);
        data_Value_entered.add(consumer_patient_email);
        data_Value_entered.add(consumer_amt);
        data_Value_entered.add(user_mode);
        
        
        return data_Value_entered;
    }

    private void populateAllOrdersTable() {
        DefaultTableModel model = (DefaultTableModel) OrdersTable.getModel();
        model.setRowCount(0);
        ERWardDirectory patientDirectory = infirmaries.getPatientDirectory();
        ArrayList<ER_Ward_Incoming> incomingList = patientDirectory.getPatientList();
        for(ER_Ward_Incoming patient: incomingList){
            ArrayList<ER_DispatchOrders> dispatchOrderList = patient.getPatientOrderList();
            for(ER_DispatchOrders dispatchOrders: dispatchOrderList){
                model.addRow(new Object[]{patient,patient.getER_Ward_Name(),dispatchOrders.getRequest_Id(), dispatchOrders.getOrder_item(),dispatchOrders.getRequest_Date()});
            }   
        }
        OrdersTable.setModel(model);
    }
}
