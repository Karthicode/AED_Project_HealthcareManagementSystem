/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.HealthCareManagerJFrame;

import model.HelperTeam.HelperTeam;
import Model.DispatcherServiceProvider.DispatcherService;
import IntegrationSystem.HealthcareSystemOrganizationIntegration;
import UI.AdminRole.PracticeAdminJPanel.PartnerInfirmariesAdminJPanel;
import UI.HealthCareHelperTeamAdminPage.CustomerSupportTeamAdminWorkAreaJPanel;
import HealthCareManager.PartnerInfirmaries.PartnerInfirmiries;
import IntegrationSystem.ConsumerRecords;
import IntegrationSystem.EnterpriseUserDirectory;
import HealthcareProviderData.DB4O.HealthcareDB4ObjectDatabase;
import InventorySupply.InventorySupply;
import java.awt.CardLayout;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.JPanel;

import UI.HelperTeamJPanel.HelperTeamJPanel;
import UI.DispatcherService.DispatcherServiceDatabase;
import UI.HealthCareManager.AllOrgAdministrator.EmergencySupplyJPanel;

import UI.HealthCareManager.InventorySupplyProviderJPanel.ConsultantAdminPanel;
import UI.Admin.InventorySupplyAdminJPanel.InventorySupplyAdminJPanel;
import UI.AdminRole.AdminJPanel.ManagerAccountsJPanel;

/**
 *
 * @author harshithnarahari
 */

public class HospitalManagementMainJFrame extends javax.swing.JFrame {

    /**
     * Creates new Main JFrame for Program Execution
     */
    private HealthcareSystemOrganizationIntegration healthcareSystemOrganizationIntegration;
    public HealthcareDB4ObjectDatabase dB4OUtil = HealthcareDB4ObjectDatabase.getInstance();
    ConsumerRecords consumerRecords;

    public HospitalManagementMainJFrame() {
        initComponents();
        healthcareSystemOrganizationIntegration = dB4OUtil.getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanelLogin = new javax.swing.JPanel();
        LoginJButton = new javax.swing.JButton();
        userNameJtextField = new javax.swing.JTextField();
        PasswordFiled = new javax.swing.JPasswordField();
        jLabelUserName = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        loginJLabel = new javax.swing.JLabel();
        JButtonExit = new javax.swing.JButton();
        jPanelWorkArea = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setPreferredSize(new java.awt.Dimension(1381, 1080));

        jPanelLogin.setBackground(new java.awt.Color(255, 102, 102));
        jPanelLogin.setMinimumSize(new java.awt.Dimension(260, 447));
        jPanelLogin.setPreferredSize(new java.awt.Dimension(200, 1080));
        jPanelLogin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LoginJButton.setBackground(new java.awt.Color(0, 255, 102));
        LoginJButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        LoginJButton.setText("Login");
        LoginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginJButtonActionPerformed(evt);
            }
        });
        jPanelLogin.add(LoginJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, 100, -1));
        jPanelLogin.add(userNameJtextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 130, 30));
        jPanelLogin.add(PasswordFiled, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 130, 30));

        jLabelUserName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelUserName.setForeground(new java.awt.Color(255, 255, 255));
        jLabelUserName.setText("User Name");
        jPanelLogin.add(jLabelUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        jLabelPassword.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelPassword.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPassword.setText("Password");
        jPanelLogin.add(jLabelPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));
        jPanelLogin.add(loginJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 229, -1, -1));

        JButtonExit.setBackground(new java.awt.Color(255, 255, 255));
        JButtonExit.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        JButtonExit.setText("Exit");
        JButtonExit.setEnabled(false);
        JButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonExitActionPerformed(evt);
            }
        });
        jPanelLogin.add(JButtonExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 135, -1));

        jSplitPane1.setLeftComponent(jPanelLogin);

        jPanelWorkArea.setPreferredSize(new java.awt.Dimension(1181, 1080));
        jPanelWorkArea.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(jPanelWorkArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 2195, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1185, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonExitActionPerformed
        JButtonExit.setEnabled(false);
        LoginJButton.setEnabled(true);
        userNameJtextField.setEnabled(true);
        PasswordFiled.setEnabled(true);
        userNameJtextField.setText("");
        PasswordFiled.setText("");
        jPanelWorkArea.removeAll();
        JPanel blankJP = new JPanel();
        jPanelWorkArea.add("blank", blankJP);
        CardLayout crdLyt = (CardLayout) jPanelWorkArea.getLayout();
        crdLyt.next(jPanelWorkArea);

        dB4OUtil.inputToStore(healthcareSystemOrganizationIntegration);
    }//GEN-LAST:event_JButtonExitActionPerformed

    private void LoginJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginJButtonActionPerformed
        // Get user name
        String emailID = userNameJtextField.getText();
        String password = PasswordFiled.getText();
        EnterpriseUserDirectory enterpriseUserDirectory = healthcareSystemOrganizationIntegration.getUserAccDirectory();
        if (enterpriseUserDirectory.MainJFrameLoginAuth(emailID, password)) {
            ArrayList<ConsumerRecords> consumerRecordses = enterpriseUserDirectory.get_User_Details();

            consumerRecords = enterpriseUserDirectory.UserAuth(emailID, password);
            JButtonExit.setEnabled(true);
            userNameJtextField.setEnabled(false);
            PasswordFiled.setEnabled(false);
            LoginJButton.setEnabled(false);

            System.out.println("userAccount.getRole().toString(): " + consumerRecords.getRole().toString());
            if (verifyLoggedInUserRole("SystemAdmin")) {
                ManagerAccountsJPanel managerAccountsJPanel = new ManagerAccountsJPanel(jPanelWorkArea, healthcareSystemOrganizationIntegration);
                jPanelWorkArea.add("Sysadmin", managerAccountsJPanel);
                CardLayout crdLyt = (CardLayout) jPanelWorkArea.getLayout();
                crdLyt.next(jPanelWorkArea);
            } else if (verifyLoggedInUserRole("HospitalAdmin")) {
                PartnerInfirmiries infirmiries = consumerRecords.getInfirmiries();
                PartnerInfirmariesAdminJPanel hospitalAdminWorkAreaJPanel = new PartnerInfirmariesAdminJPanel(jPanelWorkArea, healthcareSystemOrganizationIntegration, infirmiries);
                jPanelWorkArea.add("hospitalAdminWorkAreaJPanel", hospitalAdminWorkAreaJPanel);
                CardLayout crdLyt = (CardLayout) jPanelWorkArea.getLayout();
                crdLyt.next(jPanelWorkArea);
            } else if (verifyLoggedInUserRole("Technician")) {
                PartnerInfirmiries infirmiries = consumerRecords.getInfirmiries();
                FRTechnicalRequestPanel medTechnicalWorkAreaJPanel = new FRTechnicalRequestPanel(jPanelWorkArea, healthcareSystemOrganizationIntegration, infirmiries);
                jPanelWorkArea.add("hospitalAdminWorkAreaJPanel", medTechnicalWorkAreaJPanel);
                CardLayout crdLyt = (CardLayout) jPanelWorkArea.getLayout();
                crdLyt.next(jPanelWorkArea);
            } else if (verifyLoggedInUserRole("CustomerSupportTeamAdmin")) {
                HelperTeam customerSupportTeam = consumerRecords.getHelperTeamDir();
                CustomerSupportTeamAdminWorkAreaJPanel customerSupportTeamAdminWorkAreaJPanel = new CustomerSupportTeamAdminWorkAreaJPanel(jPanelWorkArea, healthcareSystemOrganizationIntegration, customerSupportTeam, consumerRecords);
                jPanelWorkArea.add("customerSupportTeamAdminWorkAreaJPanel", customerSupportTeamAdminWorkAreaJPanel);
                CardLayout crdLyt = (CardLayout) jPanelWorkArea.getLayout();
                crdLyt.next(jPanelWorkArea);
            } else if (verifyLoggedInUserRole("CustomerSupportMember")) {
                HelperTeamJPanel customerSupportMemberWorkAreaJPanel = new HelperTeamJPanel(jPanelWorkArea, healthcareSystemOrganizationIntegration);
                jPanelWorkArea.add("customerSupportMemberWorkAreaJPanel", customerSupportMemberWorkAreaJPanel);
                CardLayout crdLyt = (CardLayout) jPanelWorkArea.getLayout();
                crdLyt.next(jPanelWorkArea);
            } else if (verifyLoggedInUserRole("MedSupWarehouseAdmin")) {
                InventorySupply inventorySupply = consumerRecords.getInventory_Supply();
                InventorySupplyAdminJPanel medSupWarehouseAdminWorkAreaJPanel = new InventorySupplyAdminJPanel(jPanelWorkArea, healthcareSystemOrganizationIntegration, inventorySupply);
                jPanelWorkArea.add("medSupWarehouseAdminWorkAreaJPanel", medSupWarehouseAdminWorkAreaJPanel);
                CardLayout crdLyt = (CardLayout) jPanelWorkArea.getLayout();
                crdLyt.next(jPanelWorkArea);
            } else if (verifyLoggedInUserRole("MedSupEquipAdmin")) {
                PartnerInfirmiries infirmiries = consumerRecords.getInfirmiries();
                ConsultantAdminPanel medSupAdminWorkAreaJPanel = new ConsultantAdminPanel(jPanelWorkArea, healthcareSystemOrganizationIntegration, infirmiries);
                jPanelWorkArea.add("medSupAdminWorkAreaJPanel", medSupAdminWorkAreaJPanel);
                CardLayout crdLyt = (CardLayout) jPanelWorkArea.getLayout();
                crdLyt.next(jPanelWorkArea);
            } else if (verifyLoggedInUserRole("DeliveryAgencyAdmin")) {
                DispatcherService dispatcherService = consumerRecords.getDispatcher_Service();
                DispatcherServiceDatabase deliveryAgencyOrderDatabase = new DispatcherServiceDatabase(jPanelWorkArea, healthcareSystemOrganizationIntegration, dispatcherService);
                jPanelWorkArea.add("DeliveryAgencyOrderDatabase", deliveryAgencyOrderDatabase);
                CardLayout crdLyt = (CardLayout) jPanelWorkArea.getLayout();
                crdLyt.next(jPanelWorkArea);
            } else if (verifyLoggedInUserRole("FrontDeskOperator")) {
                PartnerInfirmiries infirmiries = consumerRecords.getInfirmiries();
                EmergencySupplyJPanel medSuppEquipPatient = new EmergencySupplyJPanel(jPanelWorkArea, healthcareSystemOrganizationIntegration, infirmiries);
                jPanelWorkArea.add("medSuppEquipPatient", medSuppEquipPatient);
                CardLayout crdLyt = (CardLayout) jPanelWorkArea.getLayout();
                crdLyt.next(jPanelWorkArea);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Invalid credentials");
        }

    }//GEN-LAST:event_LoginJButtonActionPerformed
 

    /**
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HospitalManagementMainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HospitalManagementMainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HospitalManagementMainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HospitalManagementMainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HospitalManagementMainJFrame().setVisible(true);
            }
        });
    } 
    public boolean verifyLoggedInUserRole(String role){
              Boolean result = consumerRecords.getRole().toString().equals(role);
              return result;
            }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButtonExit;
    private javax.swing.JButton LoginJButton;
    private javax.swing.JPasswordField PasswordFiled;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelUserName;
    public javax.swing.JPanel jPanelLogin;
    private javax.swing.JPanel jPanelWorkArea;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel loginJLabel;
    private javax.swing.JTextField userNameJtextField;
    // End of variables declaration//GEN-END:variables
}
